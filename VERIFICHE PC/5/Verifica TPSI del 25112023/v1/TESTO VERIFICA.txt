# Verifica TPSI del 25/11/202* - Classe 

**Consiglio**: leggete bene tutto il testo prima di iniziare.

Risolvete in ordine i primi 3 esercizi. Solo successivamente provate a passare agli altri.


### Esercizio 1: Creazione struttura dati
Memorizzate all'interno di una o più strutture dati di vostra scelta le seguenti informazioni relative a un elenco di
servizi acquistabili/prenotabili presso una struttura. Per fare la scelta ottimale (e più semplice da gestire) ascoltate il consiglio che vi è stato dato qualche riga sopra!

|Descrizione|Durata minima|Costo/h|
|:---|:---|:---|
|Campo calcetto|1|80€
|Campo basket|1|100€
|Campo padel|1|50€
|Campo squash|1|20€
|Campo tennis|2|40€
|Ring da combattimento|2|50€
|Sala cinema|2|200€
|Pacchetto massaggi cervicali|2|20€
|Pacchetto massaggi piedi|2|20€
|Pacchetto massaggi arti inferiori|3|30€
|Pacchetto massaggi arti superiori|3|30€
|Pacchetto massaggi completi|5|40€
|Pacchetto accessi area fitness|10|10€
|Pacchetto accessi area relax|5|10€

### Esercizio 2: Implementazione del form

Implementate un form html per rendere possibile la scelta di un solo servizio tra quelli presenti nella struttura dati (o nelle strutture, se ne avete più d'una) che avete creato nel primo esercizio. Lasciate inoltre modo all'utente di inserire la quantità di ore da acquistare. L'utente potrà dunque scegliere il servizio e indicare il numero di ore che vuole acquistare: ad esempio potrà scegliere *Pacchetto massaggi piedi* e indicare che vuole acquistare in totale *15* ore, oppure potrà scegliere l'affitto di un *Ring da combattimento* per un totale di *5 ore*, e così via. Fate in modo che se venissero aggiunti o eliminati elementi tra i dati memorizzati tutto continui a funzionare correttamente.

La pagina di destinazione del form, che implementerete nel seguente esercizio, può essere la stessa pagina che contiene il form o una pagina differente, a vostra scelta. Utilizzate, tra get e post, il metodo che vi sembra più adatto.

### Esercizio 3: Ricezione e gestione dei dati del form

Utilizzando il linguaggio PHP leggete i dati ricevuti e visualizzate sulla pagina web il riepilogo delle scelte dell'utente, ovvero la descrizione del servizio e il numero di ore che l'utente ha indicato. Curate, usando anche css (e/o bootstrap o altri framework) l'aspetto di questa pagina.

*Se siete arrivati qui e tutto è implementato correttamente e nel migliore dei modi: complimenti! Avete già raggiunto la sufficienza!*

### Esercizio 4: Controllo d'errore

Aggiungete a quanto fatto nell'Esercizio 3 il seguente controllo d'errore.

- Se per il servizio scelto è stato indicato un numero di ore minore del minimo consentito non visualizzate il riepilogo dei dati, ma mostrate all'utente un messaggio come questo: *Il numero di ore acquistato è inferiore al minimo consentito: non è possibile procedere con l'acquisto*. Se potete, riproponete il form o visualizzate un pulsante/link per ritornarvi.


### Esercizio 5: Calcoli che utilizzano i dati ricevuti

*Potete risolvere questo Esercizio anche se avete saltato il 4.*
Aggiungete alla visualizzazione del riepilogo il calcolo del costo complessivo dell'acquisto effettuato, ottenuto utilizzando il costo orario del servizio che vedete indicato nella tabella. Visualizzate sulla pagina, sotto a quanto già mostrato, una scritta simile a: *Il costo complessivo dell'acquisto è xxx €*, dove *xxx* è il valore calcolato.

### Esercizio 6: Acquisti multipli

*Attenzione: prima di risolvere questo esercizio fate una copia di quanto fatto prima e conservatela per poterla consegnare in caso rinunciate ad andare oltre!*

Date all'utente la possibilità di effettuare più acquisti contemporaneamente. Potete scegliere di implementare un form che permetta di selezionare un numero massimo di servizi deciso da voi (anche solo due), indicando per ognuno il numero di ore.

Lasciare all'utente la possibilità di indicare un numero arbitrario di servizi da acquistare sarebbe più complicato, e ancor di più lo sarebbe creare un form dinamico, che permetta mediante un tasto gestito da JS di inserire nuovi campi da compilare all'occorrenza, ma se volete e se vi avanza tempo provateci.

